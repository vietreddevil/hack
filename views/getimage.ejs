<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/png" href="/img/logo.ico">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>
    My Style
  </title>
  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no'
    name='viewport' />
  <!--     Fonts and icons     -->
  <link rel="stylesheet" type="text/css"
    href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">
  <!-- CSS Files -->
  <link href="/css/material-kit.css?v=2.0.5" rel="stylesheet" />
  <link href="/css/view/index.css" rel="stylesheet" />
</head>

<body class="index-page sidebar-collapse" onresize="configView();">
  <nav class="navbar navbar-transparent navbar-color-on-scroll fixed-top navbar-expand-lg" color-on-scroll="100"
    id="sectionsNav">
    <div class="container">
      <div class="navbar-translate">
        <a class="navbar-brand" href="https://www.facebook.com/inforetechnology">
          My Style </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" aria-expanded="false"
          aria-label="Toggle navigation">
          <span class="sr-only">Toggle navigation</span>
          <span class="navbar-toggler-icon"></span>
          <span class="navbar-toggler-icon"></span>
          <span class="navbar-toggler-icon"></span>
        </button>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="navbar-nav ml-auto">

        </ul>
      </div>
    </div>
  </nav>
  <div class="wrapper">
    <!-- <form id="uploadForm">
            <input type="file" name="image">
            <input type="file" name="cloth">
            <input type="submit" value="cc">
        </form>
        <a href="/wear"> ccccccccccccc </a> -->
    <form id="image_upload">
      <div class="contentarea">
        <div class="camera ">
          <video id="video">Video stream not available.</video>
        </div>
        <input type="file" name="image" id="image">
        <input type="text" name="cloth"  id="cloth">
        <!-- <input type="text" name="filename" id="filename"> -->
        <button class="btn btn-success" id="startbutton">Take photo</button>
        <button class="btn btn-warning" id="renew" onclick="new_image();">New</button>
        <input type="submit" class="btn btn-info" id="submit_image">
        <canvas id="canvas">
        </canvas>
        <div class="output">
          <img id="photo" alt="The screen capture will appear in this box.">
        </div>
      </div>
    </form>
  </div>

  <img src="<%=choice.shirt%>" style="display: none" id="shirt">
  <form id="wear_clothes" style="display: none;" action="/check_image" method="POST">
    <input type="hidden" name="img_src" id="img_src" value="">
    <input type="hidden" name="brand" id="brand_name" value="">
    <input type="hidden" name="type" id="type_name" value="">
  </form>
  <form id="form_temp" action="/postwear" method="POST" style="display: none">
    <input type="hidden" id="temp_rs" name="temp_rs">
  </form>
  <input type="hidden" value="<%=choice.shirt%>" id="temp_choice_hidden">
  <!--   Core JS Files   -->
  <script src="/js/core/jquery.min.js" type="text/javascript"></script>
  <script src="/js/core/popper.min.js" type="text/javascript"></script>
  <script src="/js/core/bootstrap-material-design.min.js" type="text/javascript"></script>
  <script src="/js/plugins/moment.min.js"></script>
  <!--	Plugin for the Datepicker, full documentation here: https://github.com/Eonasdan/bootstrap-datetimepicker -->
  <script src="/js/plugins/bootstrap-datetimepicker.js" type="text/javascript"></script>
  <!--  Plugin for the Sliders, full documentation here: http://refreshless.com/nouislider/ -->
  <script src="/js/plugins/nouislider.min.js" type="text/javascript"></script>
  <!-- Control Center for Material Kit: parallax effects, scripts for the example pages etc -->
  <script src="/js/material-kit.js?v=2.0.5" type="text/javascript"></script>
  <script src="/js/view/brand.js" type="text/javascript"></script>
</body>
<style>
  #video {
    border: 1px solid black;
    box-shadow: 2px 2px 3px black;
    width: 320px;
    height: 240px;
    position: absolute;
    z-index: 10;
    top: 20%;
    left: 0;
  }

  #photo {
    z-index: 1;
    border: 1px solid black;
    box-shadow: 2px 2px 3px black;
    width: 320px;
    height: 240px;
    position: absolute;
    top: 20%;
    left: 0;
  }

  #canvas {
    display: none;
  }

  .camera {
    width: 340px;
    display: inline-block;
  }

  .output {
    width: 340px;
    display: inline-block;
  }

  #startbutton {
    display: block;
    position: absolute;
    bottom: 130px;
    left: 100px;
    background-color: rgba(0, 150, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.7);
    box-shadow: 0px 0px 1px 2px rgba(0, 0, 0, 0.2);
    font-size: 14px;
    font-family: "Lucida Grande", "Arial", sans-serif;
    color: rgba(255, 255, 255, 1.0);
  }

  #new {
    display: block;
    color: black;
    background: yellow;
    position: absolute;
    bottom: 130px;
    left: 100px;
  }

  #image {
    position: absolute;
    bottom: 90px;
    left: 100px
  }

  #cloth {
    position: absolute;
    bottom: 60px;
    left: 100px
  }

  #submit_image {
    position: absolute;
    bottom: 10px;
    left: 100px
  }

  .contentarea {
    font-size: 16px;
    font-family: "Lucida Grande", "Arial", sans-serif;
    width: 760px;
  }
</style>
<script>
  var temp_url = '';
  (function () {
    // The width and height of the captured photo. We will set the
    // width to the value defined here, but the height will be
    // calculated based on the aspect ratio of the input stream.

    var width = 320;    // We will scale the photo width to this
    var height = 0;     // This will be computed based on the input stream

    // |streaming| indicates whether or not we're currently streaming
    // video from the camera. Obviously, we start at false.

    var streaming = false;

    // The various HTML elements we need to configure or control. These
    // will be set by the startup() function.

    var video = null;
    var canvas = null;
    var photo = null;
    var startbutton = null;

    function startup() {
      video = document.getElementById('video');
      canvas = document.getElementById('canvas');
      photo = document.getElementById('photo');
      startbutton = document.getElementById('startbutton');

      navigator.mediaDevices.getUserMedia({ video: true, audio: false })
        .then(function (stream) {
          video.srcObject = stream;
          video.play();
        })
        .catch(function (err) {
          console.log("An error occurred: " + err);
        });

      video.addEventListener('canplay', function (ev) {
        if (!streaming) {
          height = video.videoHeight / (video.videoWidth / width);

          // Firefox currently has a bug where the height can't be read from
          // the video, so we will make assumptions if this happens.

          if (isNaN(height)) {
            height = width / (4 / 3);
          }

          video.setAttribute('width', width);
          video.setAttribute('height', height);
          canvas.setAttribute('width', width);
          canvas.setAttribute('height', height);
          streaming = true;
        }
      }, false);

      startbutton.addEventListener('click', function (ev) {
        takepicture();
        ev.preventDefault();
      }, false);

      clearphoto();
    }

    // Fill the photo with an indication that none has been
    // captured.

    function clearphoto() {
      var context = canvas.getContext('2d');
      context.fillStyle = "#AAA";
      context.fillRect(0, 0, canvas.width, canvas.height);

      var data = canvas.toDataURL('image/png');
      temp_url = data;
      photo.setAttribute('src', data);
    }

    // Capture a photo by fetching the current contents of the video
    // and drawing it into a canvas, then converting that to a PNG
    // format data URL. By drawing it on an offscreen canvas and then
    // drawing that to the screen, we can change its size and/or apply
    // other changes before drawing it.

    function takepicture() {
      var context = canvas.getContext('2d');
      if (width && height) {
        canvas.width = width;
        canvas.height = height;
        context.drawImage(video, 0, 0, width, height);
        var data = canvas.toDataURL('image/png');
        photo.setAttribute('src', data);
        $('#photo').css({ 'z-index': '20' });
        $('#renew').css({ 'display': 'block', 'position': 'absolute', 'bottom': '130px', 'left': '100px' });

        $('#startbutton').hide();
      } else {
        clearphoto();
      }
    }

    // Set up our event listener to run the startup process
    // once loading is complete.
    window.addEventListener('load', startup, false);
  })();
  function new_image() {
    $('#photo').css({ 'z-index': '5' }); $('#renew').hide();
    $('#startbutton').show();
  }
  $(document).ready(() => {
    // $('#cloth').val($('#temp_choice_hidden').val());
    var choice = $('#temp_choice_hidden').val();
    var temp_index = choice.lastIndexOf('/');
    $('#cloth').val(choice.substr(temp_index + 1));
    $('#image_upload').submit(function (e) {
      var img = document.querySelector('img');
      e.preventDefault();
      var form = $('#image_upload')[0]; // You need to use standard javascript object here
      var formData = new FormData(form);
      $.ajax({
        url: 'http://ee17ada6.ngrok.io/process3',
        data: formData,
        type: 'post',
        crossDomain: true,
        contentType: false, // NEEDED, DON'T OMIT THIS (requires jQuery 1.6+)
        processData: false, // NEEDED, DON'T OMIT THIS
        success: function (res) {
          var url = 'http://ee17ada6.ngrok.io' + res;
          $('#temp_rs').val(url)
          $('#form_temp').submit();
          
          // var xhttp = new XMLHttpRequest();
          // xhttp.onreadystatechange = function () {
          //   if (this.readyState == 4 && this.status == 200) { 
          //   }
          // };
          // xhttp.open("POST", "/postwear", true);
          // var formData = new FormData();
          // formData.append('src', url);
          // xhttp.send(formData);
        }
      });

    });
  });
</script>

</html>